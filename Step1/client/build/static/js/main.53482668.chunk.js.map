{"version":3,"sources":["components/login/index.js","api/index.js","components/homepage/index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","_ref","onLoginSuccessful","email","setEmail","useState","password","setPassword","hasError","setHasError","_jsx","Container","children","_jsxs","Card","className","Header","as","Body","Form","onSubmit","async","event","preventDefault","loginResult","fetch","method","body","JSON","stringify","headers","then","response","ok","Error","status","json","catch","err","console","log","login","name","token","localStorage","setItem","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Alert","variant","Button","Homepage","onLogout","isLoading","setIsLoading","noArtworksFound","setNoArtworksFound","keyword","setKeyword","artworks","setArtworks","fluid","Row","noGutters","onClick","_ref2","concat","searchArtworks","length","InputGroup","Prepend","disabled","Spinner","animation","CardColumns","map","artwork","idx","id","title","image_url","artist_display","date_display","medium_display","place_of_origin","href","rel","Img","src","Title","style","whiteSpace","App","isUserSignedIn","setIsUserSignedIn","useEffect","getItem","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"4NAsEeA,MAlEf,SAAcC,GAAyB,IAAxB,kBAAEC,GAAmBD,EAClC,MAAOE,EAAOC,GAAYC,mBAAS,KAC5BC,EAAUC,GAAeF,mBAAS,KAClCG,EAAUC,GAAeJ,oBAAS,GAmBzC,OACEK,cAACC,IAAS,CAAAC,SACRC,eAACC,IAAI,CAACC,UAAU,OAAMH,SAAA,CACpBF,cAACI,IAAKE,OAAM,CAACC,GAAG,KAAIL,SAAC,UACrBF,cAACI,IAAKI,KAAI,CAAAN,SACRC,eAACM,IAAI,CAACJ,UAAU,QAAQK,SAnBfC,UACfC,EAAMC,iBACNd,GAAY,GACZ,MAAMe,QCfHH,eAAoBpB,GAAuB,IAAtB,MAAEE,EAAK,SAAEG,GAAUL,EAC7C,aAAawB,MAAM,kBAAmB,CACpCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE1B,QAAOG,aAC9BwB,QAAS,CAAE,eAAgB,sBAE1BC,MAAMC,IAEL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,eAAiBF,EAASG,QAG5C,OAAOH,EAASI,MAAM,IAEvBC,OAAOC,IACNC,QAAQC,IAAIF,EAAI,GAEtB,CDF8BG,CAAM,CAAEtC,QAAOG,aACzC,GAAKkB,EACA,CACH,MAAM,KAAEkB,EAAI,MAAEC,GAAUnB,EAExBoB,aAAaC,QAAQ,OAAQH,GAC7BE,aAAaC,QAAQ,QAASF,GAC9BzC,GACF,MAPkBO,GAAY,EAO9B,EAQiDG,SAAA,CACzCC,eAACM,IAAK2B,MAAK,CAACC,UAAU,iBAAgBnC,SAAA,CACpCF,cAACS,IAAK6B,MAAK,CAAApC,SAAC,kBACZF,cAACS,IAAK8B,QAAO,CACXC,KAAK,QACLC,YAAY,cACZC,SA5BS9B,GAAUlB,EAASkB,EAAM+B,OAAOC,OA6BzCA,MAAOnD,IAETO,cAACS,IAAKoC,KAAI,CAACxC,UAAU,aAAYH,SAAC,sDAKpCC,eAACM,IAAK2B,MAAK,CAACC,UAAU,oBAAmBnC,SAAA,CACvCF,cAACS,IAAK6B,MAAK,CAAApC,SAAC,aACZF,cAACS,IAAK8B,QAAO,CACXC,KAAK,WACLC,YAAY,WACZC,SAxCY9B,GAAUf,EAAYe,EAAM+B,OAAOC,OAyC/CA,MAAOhD,OAGVE,GACCE,cAAC8C,IAAK,CAACC,QAAS,SAAS7C,SAAC,0FAK5BF,cAACgD,IAAM,CAACD,QAAQ,UAAUP,KAAK,SAAQtC,SAAC,oBAQpD,E,gCEwDe+C,MA9Gf,SAAiB1D,GAAgB,IAAf,SAAE2D,GAAU3D,EAC5B,MAAO4D,EAAWC,GAAgBzD,oBAAS,IACpC0D,EAAiBC,GAAsB3D,oBAAS,IAChD4D,EAASC,GAAc7D,mBAAS,KAChC8D,EAAUC,GAAe/D,mBAAS,IAezC,OACEQ,eAACF,IAAS,CAAC0D,OAAK,EAAAzD,SAAA,CACdF,cAAC4D,IAAG,CAACvD,UAAU,gCAAgCwD,WAAS,EAAA3D,SACtDF,cAACgD,IAAM,CAACD,QAAQ,iBAAiBe,QAASZ,EAAShD,SAAC,cAItDF,cAAC4D,IAAG,CAACC,WAAS,EAAA3D,SACZF,cAAA,MAAAE,SAAI,eAENF,cAAC4D,IAAG,CAACvD,UAAU,OAAOwD,WAAS,EAAA3D,SAC7BF,cAAA,MAAAE,SAAI,mGAKNF,cAAC4D,IAAG,CAACC,WAAS,EAAA3D,SACZF,cAACS,IAAI,CAACJ,UAAU,aAAaK,SA1BVC,UACvBC,EAAMC,iBACNuC,GAAa,GACb,MAAMK,QDRH9C,eAA6BoD,GAAe,IAAd,QAAER,GAASQ,EAC9C,aAAahD,MAAM,6BAADiD,OAA8BT,GAAW,CACzDvC,OAAQ,MACRI,QAAS,CAAE,eAAgB,sBAE1BC,MAAMC,IAEL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,eAAiBF,EAASG,QAG5C,OAAOH,EAASI,MAAM,IAEvBC,OAAOC,IACNC,QAAQC,IAAIF,EAAI,GAEtB,CCR2BqC,CAAe,CAAEV,YACxCG,EAAYD,GACZH,GAAoBG,IAAaA,EAASS,QAC1Cd,GAAa,EAAM,EAoByClD,SACtDC,eAACgE,IAAU,CAAAjE,SAAA,CACTF,cAACS,IAAK8B,QAAO,CACXC,KAAK,OACLC,YAAY,yCACZC,SAnCa9B,IACvB4C,EAAW5C,EAAM+B,OAAOC,MAAM,EAmCpBA,MAAOW,IAETvD,cAACmE,IAAWC,QAAO,CAAAlE,SACjBF,cAACgD,IAAM,CACLD,QAAQ,kBACRsB,UAAWd,EACXf,KAAK,SAAQtC,SACd,6BAORiD,GACCnD,cAAC4D,IAAG,CAACvD,UAAU,8BAA6BH,SAC1CF,cAACsE,IAAO,CAACC,UAAU,SAASxB,QAAQ,cAGvCM,IAAoBF,EACnBnD,cAAC8C,IAAK,CAACC,QAAS,OAAO7C,SAAC,qDAIxBF,cAACwE,IAAW,CAAAtE,SACTuD,EAASgB,KAAI,CAACC,EAASC,KACtB,MAAM,GACJC,EAAE,MACFC,EAAK,UACLC,EAAS,eACTC,EAAc,aACdC,EAAY,eACZC,EAAc,gBACdC,GACER,EACJ,OACEvE,eAACC,IAAI,CAAAF,SAAA,CACHF,cAAA,KACEmF,KAAML,EACNnC,OAAO,SACPyC,IAAI,aACJ,eAAa,OAAMlF,SAEnBF,cAACI,IAAKiF,IAAG,CAACtC,QAAQ,MAAMuC,IAAKR,MAE/B3E,eAACC,IAAKI,KAAI,CAAAN,SAAA,CACRF,cAACI,IAAKmF,MAAK,CAAArF,SAAE2E,IACb1E,eAACC,IAAKyC,KAAI,CACRxC,UAAU,aACVmF,MAAO,CAAEC,WAAY,YAAavF,SAAA,CAEjCgF,EAAgB,KAAGF,EACpBhF,cAAA,SACAA,cAAA,SAAOK,UAAU,aAAYH,SAAE6E,OAEjC/E,cAACI,IAAKyC,KAAI,CAAA3C,SACRF,cAAA,SAAOK,UAAU,aAAYH,SAAE+E,WAEvB,WAAAjB,OAtBQY,GAuBf,QAOrB,EC9Fec,MAxBf,WACE,MAAOC,EAAgBC,GAAqBjG,oBAAS,GAgBrD,OAfAkG,qBAAU,KACJ3D,aAAa4D,QAAQ,SAAUF,GAAkB,GAChDA,GAAkB,EAAM,GAC5B,IAaAD,GAAkB3F,cAACiD,EAAQ,CAACC,SAPdA,KACfhB,aAAa6D,WAAW,QACxB7D,aAAa6D,WAAW,SACxBH,GAAkB,EAAM,KAKtB5F,cAACV,EAAK,CAACE,kBAZeA,KACxBoG,GAAkB,EAAK,GAc3B,ECdeI,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7E,MAAK9B,IAAkD,IAAjD,OAAE4G,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAShH,EACpE4G,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,MCFFO,IAASC,OACPzG,cAAC0G,IAAMC,WAAU,CAAAzG,SACfF,cAAC0F,EAAG,MAENkB,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.53482668.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Alert, Card } from \"react-bootstrap\";\r\nimport { login } from \"../../api\";\r\n\r\nfunction Login({ onLoginSuccessful }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const onEmailChange = (event) => setEmail(event.target.value);\r\n  const onPasswordChange = (event) => setPassword(event.target.value);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setHasError(false);\r\n    const loginResult = await login({ email, password });\r\n    if (!loginResult) setHasError(true);\r\n    else {\r\n      const { name, token } = loginResult;\r\n      // Save user IDs on local storage\r\n      localStorage.setItem(\"name\", name);\r\n      localStorage.setItem(\"token\", token);\r\n      onLoginSuccessful();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Card className=\"mt-5\">\r\n        <Card.Header as=\"h1\">Login</Card.Header>\r\n        <Card.Body>\r\n          <Form className=\"w-100\" onSubmit={onSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={onEmailChange}\r\n                value={email}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={onPasswordChange}\r\n                value={password}\r\n              />\r\n            </Form.Group>\r\n            {hasError && (\r\n              <Alert variant={\"danger\"}>\r\n                The email address and password you entered don't match any\r\n                account. Please try again.\r\n              </Alert>\r\n            )}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export async function login({ email, password }) {\r\n  return await fetch(\"/api/auth/login\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ email, password }),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  })\r\n    .then((response) => {\r\n      // If request is not successful, display error message\r\n      if (!response.ok) {\r\n        throw new Error(\"HTTP status \" + response.status);\r\n      }\r\n\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport async function searchArtworks({ keyword }) {\r\n  return await fetch(`/api/homepage/getArtworks/${keyword}`, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  })\r\n    .then((response) => {\r\n      // If request is not successful, display error message\r\n      if (!response.ok) {\r\n        throw new Error(\"HTTP status \" + response.status);\r\n      }\r\n\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  InputGroup,\r\n  Spinner,\r\n  CardColumns,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { searchArtworks } from \"../../api\";\r\n\r\nfunction Homepage({ onLogout }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [noArtworksFound, setNoArtworksFound] = useState(false);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [artworks, setArtworks] = useState([]);\r\n\r\n  const onChangeKeyword = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  const onSearchArtworks = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const artworks = await searchArtworks({ keyword });\r\n    setArtworks(artworks);\r\n    setNoArtworksFound(!artworks || !artworks.length);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"mt-2 mb-2 justify-content-end\" noGutters>\r\n        <Button variant=\"outline-danger\" onClick={onLogout}>\r\n          Log out\r\n        </Button>\r\n      </Row>\r\n      <Row noGutters>\r\n        <h1>Welcome!</h1>\r\n      </Row>\r\n      <Row className=\"mt-2\" noGutters>\r\n        <h6>\r\n          Enter one or multiple keywords below to search for artworks in the Art\r\n          Institute of Chicago.\r\n        </h6>\r\n      </Row>\r\n      <Row noGutters>\r\n        <Form className=\"w-100 mb-5\" onSubmit={onSearchArtworks}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"e.g. Monet, O'Keeffe, Ancient Greek...\"\r\n              onChange={onChangeKeyword}\r\n              value={keyword}\r\n            />\r\n            <InputGroup.Prepend>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                disabled={!keyword}\r\n                type=\"submit\"\r\n              >\r\n                Search artworks\r\n              </Button>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n        </Form>\r\n      </Row>\r\n      {isLoading && (\r\n        <Row className=\"justify-content-center mb-5\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </Row>\r\n      )}\r\n      {noArtworksFound && !isLoading ? (\r\n        <Alert variant={\"info\"}>\r\n          No results were found for the entered keyword/s.\r\n        </Alert>\r\n      ) : (\r\n        <CardColumns>\r\n          {artworks.map((artwork, idx) => {\r\n            const {\r\n              id,\r\n              title,\r\n              image_url,\r\n              artist_display,\r\n              date_display,\r\n              medium_display,\r\n              place_of_origin,\r\n            } = artwork;\r\n            return (\r\n              <Card key={`artwork-${id}`}>\r\n                <a\r\n                  href={image_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  aria-current=\"true\"\r\n                >\r\n                  <Card.Img variant=\"top\" src={image_url} />\r\n                </a>\r\n                <Card.Body>\r\n                  <Card.Title>{title}</Card.Title>\r\n                  <Card.Text\r\n                    className=\"text-muted\"\r\n                    style={{ whiteSpace: \"pre-line\" }}\r\n                  >\r\n                    {place_of_origin}, {date_display}\r\n                    <br />\r\n                    <small className=\"text-muted\">{artist_display}</small>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <small className=\"text-muted\">{medium_display}</small>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Login from \"./components/login\";\r\nimport Homepage from \"./components/homepage\";\r\n\r\nfunction App() {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState(false);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) setIsUserSignedIn(true);\r\n    else setIsUserSignedIn(false);\r\n  }, []);\r\n\r\n  const onLoginSuccessful = () => {\r\n    setIsUserSignedIn(true);\r\n  };\r\n\r\n  const onLogout = () => {\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"token\");\r\n    setIsUserSignedIn(false);\r\n  };\r\n\r\n  return (\r\n    (isUserSignedIn && <Homepage onLogout={onLogout} />) || (\r\n      <Login onLoginSuccessful={onLoginSuccessful} />\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}